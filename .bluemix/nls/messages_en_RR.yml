---
#The format for creating a link with a URL and text is [link text](link url) with no spaces or characters between the two sets of brackets- []()
template.name: "Develop a Kubernetes app with Helm~otc-ui1734"
template.description: "With this toolchain, you can develop a Docker application and its Helm chart together in source control and have it built and deployed automatically to a Kubernetes cluster. The toolchain performs sanity checks prior to building or deploying and ensures privacy by using a private container registry and namespaces for the container registry and the Kubernetes cluster. This toolchain is also leveraging [Vulnerability Advisor](https://cloud.ibm.com/docs/services/va?topic=va-va_index), to ensure only secure images get deployed.\n\nBy default, the toolchain uses a sample Node.js \"Hello World\" app, but you can link to your own Git repository instead as long as it has a Dockerfile and a Helm chart.\n\n You can manage your IBM Cloud Container clusters in the [console](https://cloud.ibm.com/containers-kubernetes/clusters).\n\n This toolchain uses tools that are part of the Continuous Delivery service. If an instance of that service isn't already in your resource group or organization, when you click **Create**, it is automatically added at no cost to you. For more information and terms, see the [IBM Cloud catalog](/catalog/services/continuous-delivery/).\n\nTo get started, click **Create**.\n\nFor step-by-step instructions, follow the [tutorial](https://www.ibm.com/cloud/garage/tutorials/tc-simple-kube-helm).~otc-ui1735"
template.gettingStarted: " **Your toolchain is ready!**\n**Quick start:** Commit a change to the Git repo to trigger a new Docker image build, which will be scanned for vulnerabilites and deployed with Helm to your Kubernetes cluster. For step-by-step instructions, see the [tutorial](https://www.ibm.com/cloud/garage/tutorials/use-develop-kubernetes-app-with-helm-toolchain?task=2) for this toolchain.~otc-ui1736"
deploy.title: "Hello World Deploy Stage~otc-ui1737"
deploy.description: "hello-world simple toolchain~otc-ui1738"
deploy.longDescription: "The Delivery Pipeline automates continuous build, test and deploy of the Docker application.~otc-ui1739"
deploy.appDescription: "The name of your app~otc-ui1740"
deploy.appName: "App name~otc-ui1741"
deploy.apikeyDescription: "The IBM Cloud API key is used to access the IBM Cloud kubernetes service API and interact with the cluster. You can obtain your API key with 'ibmcloud iam api-key-create' or via the console at https://cloud.ibm.com/iam#/apikeys by clicking **Create API key** (Each API key only can be viewed once).~otc-ui1742"
deploy.registryRegionDescription: "The IBM Cloud region for image registry~otc-ui1743"
deploy.registrynsDescription: "The namespace in the container image registry. You can set it up with {imbcloud cr namespace-add]. Learn more at https://cloud.ibm.com/docs/services/Registry/index.html.~otc-ui1744"
deploy.regionDescription: "The IBM Cloud region for production deployment~otc-ui1745"
deploy.rgDescription: "The IBM Cloud resource group for production deployment~otc-ui1746"
deploy.clusterNameDescription: "The name of the production cluster. Retrieve it with [ibmcloud ks clusters] or via the console at https://cloud.ibm.com/containers-kubernetes/clusters.~otc-ui1747"
deploy.namespaceDescription: "Production namespace~otc-ui1748"
deploy.apikey: "IBM Cloud API key~otc-ui1749"
deploy.containerregRegion: "Container registry region~otc-ui1750"
deploy.containerregns: "Container registry namespace~otc-ui1751"
deploy.imgregRegion: "Container image registry region~otc-ui1752"
deploy.imgregNs: "Container image registry namespace~otc-ui1753"
deploy.rg: "Resource group~otc-ui1754"
deploy.cluster: "Cluster name~otc-ui1755"
deploy.clusterNs: "Cluster namespace~otc-ui1756"
deploy.clusterDescription: "Retrieve the Kubernetes cluster name with the CLI command 'ibmcloud ks clusters' or via the [console](https://cloud.ibm.com/containers-kubernetes/home/clusters).~otc-ui1757"
deploy.clusternsDescription: "If the cluster namespace doesn't exist already, it will be automatically created and configured.~otc-ui1758"
region: "Cluster region~otc-ui1759"
organization: "Organization~otc-ui1760"
space: "Space~otc-ui1761"
prodStage: "Production environment~otc-ui1762"
headerSVG.think: "THINK~otc-ui1763"
headerSVG.code: "CODE~otc-ui1764"
headerSVG.deliver: "DELIVER~otc-ui1765"
headerSVG.run: "RUN~otc-ui1766"
headerSVG.issueTracker: "ISSUE TRACKER~otc-ui1767"
headerSVG.gitlab1: "GitLab~otc-ui1768"
headerSVG.repository: "REPOSITORY~otc-ui1769"
headerSVG.gitlab2: "GitLab~otc-ui1770"
headerSVG.pipeline: "PIPELINE~otc-ui1771"
headerSVG.webIde: "WEB IDE~otc-ui1772"
headerSVG.ibmCloud: "IBM Cloud~otc-ui1773"
#Note on the following two translation. Together read "Kubernetes with Helm" but need to be split  as text wrap not supported in SVG. On screen it will look like:
#Kubernetes
#with Helm
headerSVG.k8withHelm1: "Kubernetes~otc-ui1774"
headerSVG.k8withHelm2: "with Helm~otc-ui1775"
headerSVG.github1: "GitHub~otc-ui1776"
headerSVG.github2: "GitHub~otc-ui1777"
headerSVG.gitlab3: "GitLab~otc-ui1778"
headerSVG.gitlab4: "GitLab~otc-ui1779"
headerSVG.bitbucket1: "Bitbucket~otc-ui1780"
headerSVG.bitbucket2: "Bitbucket~otc-ui1781"
