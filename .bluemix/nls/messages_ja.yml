---
#The format for creating a link with a URL and text is [link text](link url) with no spaces or characters between the two sets of brackets- []()
template.name: "Kubernetes アプリの開発 (Helm)"
template.description: "このツールチェーンによって、ソース管理において Docker アプリケーションとその Helm チャートを一緒に開発し、そのソース管理をビルドして自動的に Kubernetes クラスターにデプロイできます。このツールチェーンは、ビルドまたはデプロイの前に正常性チェックを実行し、コンテナー・レジストリーと Kubernetes クラスターにプライベート・コンテナー・レジストリーおよび名前空間を使用することによって、プライバシーを守ります。さらに、このツールチェーンは[脆弱性アドバイザー](https://www.ibm.com/blogs/bluemix/2016/06/docker-container-security-with-vulnerability-advisor/)を活用して、確実に安全なイメージのみデプロイします。\n\nデフォルトで、このツールチェーンはサンプル Node.js の「Hello World」アプリを使用しますが、代わりにユーザー独自の Git リポジトリーに (そのリポジトリーに Dockerfile および Helm チャートが含まれている限り) リンクすることもできます。\n\nIBM Cloud Container クラスターを[コンソール](https://cloud.ibm.com/containers-kubernetes/clusters) で管理できます。\n\nこのツールチェーンは、Continuous Delivery サービスに含まれるツールを使用します。そのサービスのインスタンスがリソース・グループや組織にまだない場合は、**「作成」**をクリックすると、インスタンスが無料で自動的に追加されます。詳細および条件については、[IBM Cloud カタログ](/catalog/services/continuous-delivery/)を参照してください。\n\n開始するには、**「作成」**をクリックしてください。\n\n段階的な説明については、[チュートリアル](https://www.ibm.com/cloud/garage/tutorials/tc-simple-kube-helm)を参照してください。"
template.gettingStarted: " **ツールチェーンの準備ができました**\n**クイック・スタート:** Git リポジトリーに対する変更をコミットして、新しい Docker イメージ・ビルドを起動してください。このビルドは脆弱性についてスキャンされ、Helm と一緒に Kubernetes クラスターにデプロイされます。段階的な説明については、このツールチェーンの[チュートリアル](https://www.ibm.com/cloud/garage/tutorials/use-develop-kubernetes-app-with-helm-toolchain?task=2) を参照してください。"
deploy.title: "Hello World のデプロイ・ステージ"
deploy.description: "hello-world simple ツールチェーン"
deploy.longDescription: "Delivery Pipeline は、Docker アプリケーションの継続的なビルド、テスト、およびデプロイを自動化します。"
deploy.appDescription: "アプリの名前"
deploy.appName: "アプリ名"
deploy.apikeyDescription: "IBM Cloud API キーは、IBM Cloud Kubernetes Service API へのアクセス、およびクラスターとの対話に使用されます。API キーは、「ibmcloud iam api-key-create」を使用して、または**「API キーの作成」**をクリックしてコンソール (https://cloud.ibm.com/iam#/apikeys) で取得できます (API キーはそれぞれ 1 回のみ表示されます)。"
deploy.registryRegionDescription: "イメージ・レジストリーのための IBM Cloud リージョン"
deploy.registrynsDescription: "コンテナー・イメージ・レジストリー内の名前空間。これは、{imbcloud cr namespace-add] でセットアップできます。詳細はこちら: https://cloud.ibm.com/docs/services/Registry/index.html"
deploy.regionDescription: "実動デプロイメントのための IBM Cloud リージョン"
deploy.rgDescription: "実動デプロイメントのための IBM Cloud リソース・グループ"
deploy.clusterNameDescription: "実動クラスターの名前。[ibmcloud cs clusters] を使用して、またはコンソール (https://cloud.ibm.com/containers-kubernetes/clusters) で取得します。"
deploy.namespaceDescription: "実動名前空間"
deploy.apikey: "IBM Cloud API キー"
deploy.containerregRegion: "Container Registry リージョン"
deploy.containerregns: "Container Registry 名前空間"
deploy.imgregRegion: "コンテナー・イメージ・レジストリー・リージョン"
deploy.imgregNs: "コンテナー・イメージ・レジストリー名前空間"
deploy.rg: "リソース・グループ"
deploy.cluster: "クラスター名"
deploy.clusterNs: "クラスター名前空間"
deploy.clusterDescription: "CLI コマンド「ibmcloud cs clusters」を使用して、または [コンソール](https://cloud.ibm.com/containers-kubernetes/home/clusters) で Kubernetes クラスター名を取得します。"
deploy.clusternsDescription: "まだ存在しない場合、クラスター名前空間は自動的に作成され、構成されます。"
region: "クラスター・リージョン"
organization: "組織"
space: "スペース"
prodStage: "実稼働環境"
headerSVG.think: "思考"
headerSVG.code: "コード"
headerSVG.deliver: "配信"
headerSVG.run: "実行"
headerSVG.issueTracker: "Issue トラッカー"
headerSVG.gitlab1: "GitLab"
headerSVG.repository: "リポジトリー"
headerSVG.gitlab2: "GitLab"
headerSVG.pipeline: "PIPELINE"
headerSVG.webIde: "WEB IDE"
headerSVG.ibmCloud: "IBM Cloud"
#Note on the following two translation. Together read "Kubernetes with Helm" but need to be split  as text wrap not supported in SVG. On screen it will look like:
#Kubernetes
#with Helm
headerSVG.k8withHelm1: "Kubernetes"
headerSVG.k8withHelm2: "(Helm)"
headerSVG.github1: "GitHub"
headerSVG.github2: "GitHub"
headerSVG.gitlab3: "GitLab"
headerSVG.gitlab4: "GitLab"
headerSVG.bitbucket1: "Bitbucket"
headerSVG.bitbucket2: "Bitbucket"
